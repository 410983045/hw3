<stdlib.h>

1.double atof(const char str)
ex.#include stdio.h
#include stdlib.h
#include string.h
 
int main()
{
   float val;
   char str[20];
   
   strcpy(str, 98993489);
   val = atof(str);
   printf(字符串值 = %s, 浮点值 = %fn, str, val);
 
   strcpy(str, runoob);
   val = atof(str);
   printf(字符串值 = %s, 浮点值 = %fn, str, val);
 
   return(0);
}

2.int atoi(const char str)
ex.
#include stdio.h
#include stdlib.h
#include string.h

int main()
{
   int val;
   char str[20];
   
   strcpy(str, 98993489);
   val = atoi(str);
   printf(字符串值 = %s, 整型值 = %dn, str, val);

   strcpy(str, runoob.com);
   val = atoi(str);
   printf(字符串值 = %s, 整型值 = %dn, str, val);

   return(0);
}

3.int feof(FILE stream)

ex.
#include stdio.h

int main ()
{
   FILE fp;
   int c;
  
   fp = fopen(file.txt,r);
   if(fp == NULL) 
   {
      perror(打开文件时发生错误);
      return(-1);
   }
   while(1)
   {
      c = fgetc(fp);
      if( feof(fp) )
      { 
          break ;
      }
      printf(%c, c);
   }
   fclose(fp);
   return(0);
}

4.int ferror(FILE stream)

ex.
#include stdio.h

int main()
{
   FILE fp;
   char c;

   fp = fopen(file.txt, w);

   c = fgetc(fp);
   if( ferror(fp) )
   {
      printf(读取文件：file.txt 时发生错误n);
   }
   clearerr(fp);
   if( ferror(fp) )
   {
      printf(读取文件：file.txt 时发生错误n);
   }
   fclose(fp);

   return(0);
}

5.int fflush(FILE stream)

ex.
#include stdio.h
#include string.h
 
int main()
{
 
   char buff[1024];
 
   memset( buff, '0', sizeof( buff ));
 
   fprintf(stdout, 启用全缓冲n);
   setvbuf(stdout, buff, _IOFBF, 1024);
 
   fprintf(stdout, 这里是 runoob.comn);
   fprintf(stdout, 该输出将保存到 buffn);
   fflush( stdout );
 
   fprintf(stdout, 这将在编程时出现n);
   fprintf(stdout, 最后休眠五秒钟n);
 
   sleep(5);
 
   return(0);
}
